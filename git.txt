git version - версия git

Конфигурация GIT
~~~~~~~~~~~~~~~~

Указание параметров
git config --global user.name "S.Dugin"
git config --global user.email "miror99@mail.ru"

Перезапись данных конфига git
git config --global --replace-all user.name "D.Dugin"

Удаление данных из конфига git
git config --global --unset-all user.name "D.Dugin"


Работа с GIT
~~~~~~~~~~~~

Инициализация НОВОГО репозитория
git init

Проверить состояние файлов
git status

Добавить файл в отслеживаемые git/Подготовить файл к commite
git add имя.файла - файл
git add . - все файлы из текущей папки

Убрать файл из отслеживаемых git
git reset HEAD имя.файла
git rm --cached имя.файла

Commit подготовленных файлов
git commit -m "Сообщение"

Просмотр истории commit
git log

Commit подготовленных файлов в предыдущий commit/Перезапись коментария к commit
git commit --amend -m "Сообщение"
git commit --amend --no-edit - commit без изменения "Сообщения"

Вернуть файлу в состоянии "modified" вид закомиченного файла(откатить до последнего commit)
(если файл в состоянии staged - сначала скинуть статус на modified:git reset HEAD имя.файла)
git checkout -- имя.файла


Работа с ветками (ВЕТВЛЕНИЕ)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Просмотр всех веток
git branch     - список веток
git branch -v  - список веток с идентификатором последнего комита
git branch -va - список веток с идентификатором последнего комита 
		 всех веток локальных и удаленных

Создание новой ветки
git branch имя.ветки

Переход на ветку(сделать ветку рабочей *)
git checkout имя.ветки

Сохранение файлов в статусе "modified"(не закомиченные файлы)
в буфере перед переключением веток
git stash

Просмотр списка сохраненных буферов
git stash list

Извлечение файлов из буфера после переключения на ветку
git stash pop

Слияние веток(ветка: имя.ветки изменит активную ветку(вольется))
git merge имя.ветки

Отмена слияния веток
git merge --abort

Просмотр конфликтных файлов после слияния
git status


Работа с удаленным репозиторием
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Привязка локального репозитория к удаленному репозиторию
git remote add имя.для.удаленного.репозитория ссылка.на.удаленный.репозиторий

Проверка наличия привязки к удаленному репозиторию
git remote -v

Удаление привязки к удаленному репозиторию
git remote remove имя.для.удаленного.репозитория

Выгрузить "закомиченные" данные в удаленный репозиторий
git push имя.для.удаленного.репозитория имя.ветки

Клонирование удаленного репозитория в новый локальный репозиторий
(с привязкой к удаленному репозиторию по имени: origin)
git clone ссылка.на.удаленный.репозиторий   - клонирует в папку(создает сам) с именем проекта
git clone ссылка.на.удаленный.репозиторий . - клонирует в текущую папку

Получение обновленных данных с удаленного репозитория
(копируются ВСЕ ветки с удаленного репозитория, рабочая ветка НЕ ОБНОВЛЯЕТСЯ - 
обновление производится вручную merge)
git fetch имя.для.удаленного.репозитория

Получение обновленных данных с удаленного репозитория в рабочую ветку
(копируется только указанная в команде ветка ,обновление ставится в такую-же локальную)
git pull имя.для.удаленного.репозитория имя.удаленной.ветки